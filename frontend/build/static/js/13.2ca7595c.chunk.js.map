{"version":3,"sources":["pages/dataBundles/ViewBundles.js","units/drawer/Drawer.js","units/card/Card.js","units/pageTitle/PageTitle.js","units/react-table/ReactTable.js","units/buttonLink/ButtonLink.js","units/formGroup/FormGroup.js","units/loading/Loading.js","units/numberFormat/NumberFormat.js","units/modal/Modal.js","hooks/useDashboard.js","hooks/useUsers.js","hooks/useContacts.js","hooks/useNetworks.js","hooks/useBundles.js","hooks/useTransactions.js"],"names":["ViewBundles","props","name","match","params","useBundles","data","status","actualData","error","isFetching","columns","useMemo","id","Header","accessor","d","formatDate","updatedAt","Cell","value","type","size","to","label","gutter","span","title","style","padding","borderRadius","filterable","Layout","Sider","Content","SubMenu","Menu","SiderDemo","useState","collapse","setcollapse","usePageValue","isPageLoading","isPageSuccess","isPageError","messageContent","setMessage","setPageSuccess","setPageError","height","Loading","message","success","content","key","duration","trigger","collapsible","collapsed","className","theme","mode","defaultSelectedKeys","selectedKey","Item","icon","UserOutlined","UnorderedListOutlined","GroupOutlined","SettingOutlined","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","onClick","margin","children","Title","Typography","Text","Card","width","level","PageTitle","ReactTable","defaultFilterMethod","filter","row","column","pivotId","undefined","String","toLowerCase","includes","ButtonLink","FormGroup","required","rules","initialValue","zIndex","position","backgroundColor","boxShadow","marginLeft","marginTop","LoadingOutlined","NumberFormat","Number","toFixed","displayType","thousandSeparator","prefix","ModalWrapper","visible","formId","onCancel","hideFooter","footer","form","htmlType","useDashboard","console","log","useQuery","a","instance","get","useUsers","useOneUser","refreshVariable","useContacts","useNetworks","networkName","useDebitTransactions","useCreditTransactions"],"mappings":"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","file":"static/js/13.2ca7595c.chunk.js","sourcesContent":["import React, {useMemo} from 'react';\nimport {ButtonLink, Drawer, PageTitle} from '../../units';\nimport {Card, Row, Col} from 'antd';\nimport {ReactTable} from '../../units';\nimport {formatDate} from '../../helpers';\nimport {useBundles} from '../../hooks';\n\nexport default function ViewBundles(props) {\n    let name = props.match.params.name;\n\n    const { status, data, error, isFetching } = useBundles(name);\n\n    const actualData = data? data.data : [];\n\n    const columns = useMemo(() => [\n        {\n            id: 'date',\n            Header: 'Date Added',\n            accessor: d => formatDate(d.updatedAt),\n            Cell: d=><span>{d.value}</span>\n        },\n        {\n            Header: 'Description',\n            accessor: 'description',\n        },\n        {\n            Header: 'Cost',\n            accessor: 'billValue',\n        },\n        {\n            Header: 'Validity',\n            accessor: 'validityValue',\n        },\n        {\n            id: 'validity',\n            Header: 'Validity Unit',\n            accessor: 'validity',\n            Cell: d => <span>{d.value.name}</span>\n        },\n        {\n            id: 'action',\n            Header: 'Action',\n            accessor: '_id',\n            Cell: d => <span><ButtonLink type=\"primary\" size=\"small\" to=\"#\" label=\"Edit\" /></span>\n        }\n    ], actualData)\n\n    return (\n        <Drawer>\n                 <Card>\n                <Row gutter={24}>\n                    <Col span={20}>\n            <PageTitle title={name + \" Data Bundle\"} />\n            </Col>\n               <Col span={4} style={{padding: '10px'}}>\n                <ButtonLink style={{borderRadius: '5px'}} type=\"primary\" to=\"/users/create\" label=\"New Bundle\" />\n                </Col>\n            </Row>\n\n            <ReactTable \n            columns={columns}\n            data = {actualData}\n            filterable={true}\n            />\n            </Card>\n        </Drawer>\n    )\n}\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './drawer.css';\nimport { Layout, Menu, message, Alert } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  SettingOutlined,\n  UnorderedListOutlined,\n  LoadingOutlined,\n  GroupOutlined \n} from '@ant-design/icons';\n\nimport { NavLink } from \"react-router-dom\";\nimport { usePageValue } from \"../../context\";\n\nimport {Loading} from '../../units';\n\nconst { Header, Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nexport default function SiderDemo (props) {\n \n  const [collapse, setcollapse] = useState(false);\n\n  let {\n    isPageLoading,\n    isPageError,\n    isPageSuccess,\n    messageContent,\n    setMessage,\n    setPageSuccess,\n    setPageError\n  } = usePageValue();\n\n  const toggle = () => {\n    setcollapse(!collapse)\n  };\n\n\n    return (\n      <Layout style={{height: \"inherit\"}}>\n        {isPageLoading && <Loading /> }\n        {isPageSuccess && message.success({ content: messageContent, key: 'success', duration: 2 })}\n\n        <Sider trigger={null} collapsible collapsed={collapse}>\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={props.selectedKey}>\n            <Menu.Item key=\"01\" icon={<UserOutlined />}>\n              <NavLink to=\"/dashboard\">Dashboard</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"02\" icon={<UserOutlined />}>\n              <NavLink to=\"/users\">Users</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"03\" icon={<UnorderedListOutlined  />}>\n              <NavLink to=\"/contacts/\">Contacts</NavLink>\n            </Menu.Item>\n\n            <SubMenu key=\"sub2\" icon={<GroupOutlined />} title=\"Transactions\">\n              <Menu.Item key=\"20\"> <NavLink to=\"/transactions/debit\">Debit Transactions</NavLink></Menu.Item>\n              <Menu.Item key=\"21\"> <NavLink to=\"/transactions/credit\">Credit Transactions</NavLink></Menu.Item>\n            </SubMenu>\n            \n            <SubMenu key=\"sub3\" icon={<SettingOutlined />} title=\"Data Bundles\">\n             <Menu.Item key=\"4\"><NavLink to=\"/networks/MTN\"> MTN</NavLink></Menu.Item>\n             <Menu.Item key=\"5\"> <NavLink to=\"/networks/Airtel\"> Airtel</NavLink> </Menu.Item>\n             <Menu.Item key=\"6\"><NavLink to=\"/networks/Glo\">Glo </NavLink> </Menu.Item>\n              <Menu.Item key=\"7\"><NavLink to=\"/networks/9Mobile\">9Mobile</NavLink></Menu.Item> \n            </SubMenu>\n\n\n\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n            {React.createElement(collapse ? MenuUnfoldOutlined : MenuFoldOutlined, {\n              className: 'trigger',\n              onClick: toggle,\n            })}\n          </Header>\n          <Content\n            className=\"\"\n            style={{\n              margin: '24px 16px',\n              padding: 24,\n            //   height: \"100%\",\n            }}\n          >\n           {props.children}\n          </Content>\n\n          \n        </Layout>\n      </Layout>\n    );\n  }\n\n\n// ReactDOM.render(<SiderDemo />, document.getElementById('container'));","import React from 'react';\nimport {Card as PlaneCard, Typography} from 'antd';\n\nconst {Title, Text} = Typography;\nexport default function Card({width, label, value}) {\n    return (\n        <PlaneCard style={{ width }}>\n            <Title level={4}>{value}</Title>\n            <Text>{label}</Text>\n  </PlaneCard>\n    )\n}\n","import React from 'react'\nimport {PageHeader} from 'antd'\nexport default function PageTitle({title}) {\n    return (\n        <div>\n           <PageHeader title={title} />\n        </div>\n    )\n}\n","import React from 'react'\nimport Reacttable from 'react-table';\nimport 'react-table/react-table.css';\n\nexport default function ReactTable({...props}) {\n    return (\n        <div>\n          <Reacttable \n          {...props}\n          defaultFilterMethod = {(filter, row, column) => {\n            const id = filter.pivotId || filter.id\n            \n            // TO COMPARE THEM i HAD TO CAST THEM ALL TO LOWER STRING\n            return row[id] !== undefined ? (String(row[id]).toLowerCase()).includes(String(filter.value).toLowerCase()) : true\n      \n          } }\n          /> \n        </div>\n    )\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom';\nimport {Button} from 'antd'\n\nexport default function ButtonLink({to,label, ...props}) {\n    return (\n        <Link to={to}>\n            <Button {...props}>\n                {label}\n            </Button>\n        </Link>\n    )\n}\n","import React from 'react';\nimport {Form} from 'antd';\nimport 'antd/dist/antd.css';\n\nexport function FormGroup({name, label, required, ...props}) {\n    return (\n        <Form.Item\n        name={name}\n        label={<> {label}  </>}\n        rules={ required? [\n          {\n            required: {required},\n            message: 'This field is required',\n          },\n        ] : []}\n        initialValue={props.initialValue}\n      >\n           {props.children}\n        </Form.Item>\n    )\n}\n","import React from 'react';\nimport {LoadingOutlined} from '@ant-design/icons';\n\nexport default function Loading() {\n    return (\n        <div style={{zIndex: \"99\", width: \"150px\", position: \"fixed\", borderRadius: \"5px\", backgroundColor:\"#FFF\", padding: \"10px\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\", marginLeft: '40%', marginTop: \"20px\"}}>\n             \n        <div> {<LoadingOutlined />} Loading</div>\n        \n       \n        </div>\n    )\n}\n","import React from 'react';\nimport ReactNumber from 'react-number-format';\n\nexport default function NumberFormat({value, ...props}) {\n    return (\n        <ReactNumber\n        value={Number(value? value : 0).toFixed(2)}\n        displayType={'text'}\n        thousandSeparator={true}\n        prefix={'₦'}\n        {...props}\n    />\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Form, Row, Col, Input, Button, Select, Modal} from 'antd';\nimport 'antd/dist/antd.css';\n\nfunction ModalWrapper({visible, title, formId, onCancel, hideFooter, ...props}) {\n    return (\n        <Modal \n        visible={visible}\n        title={title}\n       //  onOk={this.handleOk}\n        onCancel={() => onCancel(!visible)}\n        footer={!hideFooter? [\n         <Button key=\"back\" \n          onClick={() => onCancel(!visible)}\n          >\n            Return\n          </Button>,\n          <Button key=\"submit\" type=\"primary\" \n         //  loading={loading} \n        //  onClick={() => document.forms[`${formId}`].onFinish}\n        form={`${formId}`} htmlType=\"submit\" key=\"submit\"\n          >\n            Submit\n          </Button>,\n        ] : ''}\n        >\n      {props.children}\n       </Modal>\n    )\n}\n\nModalWrapper.propTypes = {\n\n}\n\nexport default ModalWrapper\n\n","import React from 'react';\nimport {useQuery} from 'react-query';\n// import {useApi} from '../context';\n// import api from './api';\nimport {instance} from '../api/Api';\n\n\nexport default function useDashboard () {\n    console.log('calling use dashboard');\n\nreturn useQuery(\"dashboard\", async () => {\n        const {data} = await instance.get(\"dashboard\");\n        return data;\n      });\n}\n\n","import {useQuery} from 'react-query';\nimport {instance} from '../api/Api';\n\n\nexport  function useUsers () {\n    console.log('calling use users');\n\nreturn useQuery(\"users\", async () => {\n        const {data} = await instance.get(\"users\");\n        return data;\n      });\n}\n\nexport  function useOneUser (id, refreshVariable) {\n  console.log('calling one users');\n\nreturn useQuery(\"user\"+id+ \"\" +refreshVariable, async () => {\n      const {data} = await instance.get(`users/${id}`);\n      return data;\n    });\n}","import {useQuery} from 'react-query';\nimport {instance} from '../api/Api';\n\n\nexport  function useContacts () {\nreturn useQuery(\"contacts\", async () => {\n        const {data} = await instance.get(\"contacts\");\n        return data;\n      });\n}","import {useQuery} from 'react-query';\nimport {instance} from '../api/Api';\n\n\nexport function useNetworks () {\n\nreturn useQuery(\"networks\", async () => {\n        const {data} = await instance.get(\"networks\");\n        return data;\n      });\n}","import {useQuery} from 'react-query';\nimport {instance} from '../api/Api';\n\n\nexport  function useBundles (networkName) {\n\nreturn useQuery(networkName, async () => {\n        const {data} = await instance.get(\"bundles/network/\"+networkName);\n        return data;\n      });\n}","import { useQuery } from \"react-query\";\nimport { instance } from \"../api/Api\";\n\nexport function useDebitTransactions() {\n  return useQuery(\"debitTransactions\", async () => {\n    const { data } = await instance.get(\"transactions/debit\");\n    return data;\n  });\n}\n\nexport function useCreditTransactions() {\n  return useQuery(\"creditTransactions\", async () => {\n    const { data } = await instance.get(\"transactions/credit\");\n    return data;\n  });\n}\n\nexport function useOneTransactions(transactionId) {\n    return useQuery(transactionId, async () => {\n      const { data } = await instance.get(\"transactions/details/\"+transactionId);\n      return data;\n    });\n  }\n"],"sourceRoot":""}